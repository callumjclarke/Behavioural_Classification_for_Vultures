---
format: gfm
editor: source
---

# Behavioural Classification for Vultures

MoveApps

Github repository: *https://github.com/dmpstats/Behavioural_Classification_for_Vultures*

## Description

This MoveApp applies a movement-based behavioural classification to bird
tracking data, categorizing location events into one of four classes: `Feeding`,
`Roosting`, `Resting` and `Travelling`. These four behaviours may be used in an
downstream App for clustering locations (e.g. to find feeding spots).


## Documentation

*[A detailed description of the classification process will soon be provided here]*

```{mermaid}
flowchart LR
    A{subject's<br/>current<br/>location} --- RULE1[Speed to <br/> next location]
    RULE1 -- " < travelcut" --> PREREST1((Resting))
    PREREST1 --> RULE2["Altitude change<br/>to next location(s)"]
    RULE2 -- flatlining --> PREREST2((Resting))
    RULE1 -- " > travelcut" --> TRAVL((Travelling))
    RULE2 -- ascending<br/>descending --> TRAVL
    PREREST2 --> R3["Nightpoint"]
    R3 -- TRUE --> NIGHTROOST[(Night-time<br/>Roosting)]
    NIGHTROOST --> ROOST((Roosting))
    R3 -- FALSE --> PREREST3((Resting))
    PREREST3 --> R4[Part of</br>overnight<br/>Roost Site]
    R4 -- TRUE --> ROOST
    R4 -- FALSE --> PREREST4((Resting))
    PREREST4 --> R5["Part of long run<br/>of stationary<br/>locations"]
    R5 -- FALSE --> PREREST5((Resting))
    R5 -- TRUE --> FEED((Feeding))
    PREREST5 --> R6[Unusual stationary<br/>speed given HSS]
    R6 -- TRUE --> FEED
    R6 -- FALSE --> PREREST6((Resting))
    PREREST6 --> R7[Unusual ACC<br/>variance relative<br/>to night-time]
    R7 -- FALSE --> REST((Resting))
    R7 -- TRUE --> FEED
    NIGHTROOST -.-> R7
    

    %% node styles definition
    classDef dashed stroke-width:2px,stroke-dasharray: 5 5;
    classDef final fill:#03A9F4,color:#FAFAFA;

    %% node styles attachment
    class PREREST1,PREREST2,PREREST3,PREREST4,PREREST5,PREREST6 dashed;
    class ROOST,TRAVL,FEED,REST final
```

 variance in
  #' acceleration to the next location exceeds the 95th percentile of
  #' acceleration variation values during night-time roosting, in any of the
  #' active accelerometer axis. Percentile thresholds are calculated for each
  #' individual from input data.
  
  

### MoveApps Worflow Dependencies

- This App is strictly dependent on the prior deployment of the App 
['Add Local and Solar Time'](https://www.moveapps.org/apps/browser/43272925-cd24-466f-bcb9-844a09f1806b) 
([GitHub](https://github.com/movestore/Convert-Times)) in the workflow.

- Accelerometer (ACC) data, when available for a given animal, plays a key role in
identifying feeding behaviour during the classification process. To integrate
ACC data into the classification, ensure that the App
['Fetch and Merge Accelerometer data to Locations'](https://www.moveapps.org/apps/browser/2bf78311-45a3-4d7c-8889-bd211cb38c25)
([GitHub](https://github.com/dmpstats/Fetch_and_Merge_Acceleration_to_Locations))
is deployed earlier in the workflow.


- Likewise, altitude data, when available, helps differentiate between travelling 
and stationary events. Ensure that the App
['Standardise Formats and Calculate Basic Statistics'](https://www.moveapps.org/apps/browser/301544a1-3cb8-48ce-b8cf-fa9d8535676b) ([GitHub](https://github.com/dmpstats/Standardise_Formats_and_Calculate_Basic_Statistics)) 
is deployed earlier in the workflow to accurately identify the column `altitude` 
in the input data.


### Input data

Move2 location object


### Output data

Move2 location object, with the following key columns added to the event dataset:

- `behav`: the estimated behaviour at each given location

- `RULE`: The classification rule determining the behaviour assigned to each given location

- `stationary`: 0 if the bird is estimated to perform a stationary behaviour, 1 otherwise



### Artefacts

-   `behavsummary.csv` - A .csv object summarising the classification output.
For each track/bird, the total number of locations assigned to each behavioural
group (`SFeeding`, `SResting`, `SRoosting`, `STravelling`).

- If Setting `Create Plots` is selected, two files are generated for each track/bird 
ID whithin the input data:

  1. *birdtrack_(track ID).png* - a plot of the animal's movements (with behavioural 
  classification overlaid);
  
  2. *speed_hrs_diagnostics - <track ID>.png* - a set of diagnostic plots
  assessing the fitted model describing the stationary-speed given
  hours-since-sunrise relationship required for the speed-time classification
  step.

<!-- IMPORTANT: diagnostic plots also need to be described here -->


### Settings

**Upper speed bound for Stationary Behaviour** (`travelcut`): Numeric, the speed
beyond which this species is assumed to be travelling (unit: km/h). Default is 3
km/h.

**Altitude change threshold** (`altbound`): Numeric, absolute change in altitude
between consecutive locations (in meters) beyond which a bird is considered as
ascending/descending. For example, setting this to 25 means that the bird is
`ascending` when its change in altitude exceeds 25m, and `descending` when it
falls below -25m. This setting is used only if column `altitude` is present in
the input data.

**Sunrise leeway** (`sunrise_leeway`): Integer, defines the number of minutes
before/after **sunrise** marking the start of the 'daytime' period. Negative
values (e.g. -5 minutes) move this window before sunrise, while positive numbers
indicate a shift after. Used to determine the potential end of the roosting
period.

**Sunset leeway** (`sunset_leeway`): Integer, defines the number of minutes
before/after **sunset** marking the start of the 'night-time' period. Negative
numbers move this window before sunset; positive numbers move it after. Used to
define the potential start of the roosting period. Stationary behaviour after
this time, and before the next determined *daytime*, is considered as roosting.

**Create Plots** (`create_plots`): Select this option to generate, as artefacts,
bird-specific graphs with location plots of behaviourally-classified movements,
and diagnostic plots for the stationary-speed given hours-since-sunrise model.

**Keep all generated columns** (`keepAllCols`): Select this option to keep all
columns created during the classification process. Recommend for debugging
purposes only.



<!-- #### Further Considerations
-->


### Most common errors

-   This MoveApp is designed for species that roost at night. If the species is 
nocturnal, classifications will be inaccurate or unable to be calculated.

-   This App relies completely on App ['Add Local and Solar Time MoveApp'](https://github.com/movestore/Convert-Times/tree/20a1370a9cc3668a2e2034eb49d4155038cb2182)
being deployed earlier in the Workflow to ensure essential columns
`sunrise_timestamp` and `sunset_timestamp` available for the classification
process. If these columns are not detected in the input dataset, the App will
exit abruptly and throw an error.


### Null or error handling

- Setting **Upper Speed Bound for Stationary Behaviour** or **Altitude change threshold** 
to `NULL` or less than zero, the App exits abruptly and throws an error.

- Empty datasets are returned with a warning (there is nothing to classify).

<!-- -   If an individual has fewer than 10 associated locations within the input data, the second-stage classification is not performed. More data is required for accurate classification, and small datasets can cause inconsistencies during reclassification -->